#define UNLOADED_FILE
#include <idc.idc>
    
static main(void)
{
MakeComm(0XE82D "bra if bit0 = 0");
MakeComm(0XE833 "bra if bit7 = 0");
MakeComm(0XE904 " bra if IC1 interrupt");
MakeComm(0XE906 "IC2 handler");
MakeComm(0XE909 "IC1 Int");
MakeComm(0XE911 "bra if no IC2 interrupt");
MakeComm(0XE927 "bra if bit0=0");
MakeComm(0XEA5D "dTPS");
MakeComm(0XEAB9 "dTPS_5F");
MakeComm(0XEB20 "wtf? - next line replaces B");
MakeComm(0XEB24 "table scaling change");
MakeComm(0XEB28 "B =32");
MakeComm(0XEB2C "B=8");
MakeComm(0XEB2D "A*8");
MakeComm(0XEB2E "minimum value");
MakeComm(0XEB78 "if bit2=0 get value from E500");
MakeComm(0XEB8C "oim? - looks like a branch");
MakeComm(0XEB91 "not reachable code");
MakeComm(0XEC38 "isolate bit6");
MakeComm(0XEC48 "bra if status_A0 bit2 =1");
MakeComm(0XED41 "bra if IGN34 pin=1");
MakeComm(0XED77 "bra if INJL pin = 0");
MakeComm(0XEDA6 "bra if IGN12 pin = 1");
MakeComm(0XF045 "bra if status_A0 bit6 = 1");
MakeComm(0XF187 "bra if status_A0 bit0 = 0");
MakeComm(0XF268 " loop	back if	bit6 =1");
MakeComm(0XF376 "TPS - TPS_16ms");
MakeComm(0XF378 "bra if TPS<TPS_16ms");
MakeComm(0XF37A "dTPS - 10h*");
MakeComm(0XF37D "bra if dTPS<10h");
MakeComm(0XF37F "else start count_6D");
MakeComm(0XF382 "count_6D=10h");
MakeComm(0XF388 "bit3 = dTPS>10h");
MakeComm(0XF38C "dec_count_6D");
MakeComm(0XF38E "skip if 0");
MakeComm(0XF390 "else decrement");
MakeComm(0XF391 "and update");
MakeComm(0XF395 "clear count_6D flag");
MakeComm(0XF39B "do a correction");
MakeComm(0XF39D "word_86 - 280h");
MakeComm(0XF3A0 "bra if word_86> 280h");
MakeComm(0XF3A2 "else test count_6D flag");
MakeComm(0XF3A6 "bra if count_6D =0");
MakeComm(0XF3A8 "else A=4");
MakeComm(0XF3AB "F3FB = ldd so LDAA would get thrown away");
MakeComm(0XF3AD "never comes here if F3AB is correct");
MakeComm(0XF3C4 "78:79");
MakeComm(0XF3CE "TPS - TPS_16ms");
MakeComm(0XF3D2 "else clear bit5");
MakeComm(0XF3D4 "clear bit5");
MakeComm(0XF3E1 "clear count if status_A0 bit5 = 0");
MakeComm(0XF41B "quit if status_A0 bit5 = 0");
MakeComm(0XF4C3 "bra if status_A0 bit4 = 1");
MakeComm(0XF54C "bra if status_A0 bit2 = 0");
MakeComm(0XF560 "byte_80 is dCAS_Count");
MakeComm(0XF561 "OR with 0 won't do a lot!");
MakeComm(0XF587 "bra if status_A0 bit1=0");
MakeComm(0XF700 "bra if 1");
MakeComm(0XF71D "bra if !IC2 IF");
MakeComm(0XF749 "bra if !IC1 interrupt");
MakeComm(0XF753 " bra if !IC2 interrupt");
MakeComm(0XF786 "bra if !IC2 IF");
MakeComm(0XF7D3 "test for overflow");
MakeComm(0XF7D5 "software extend counter");
MakeComm(0XF7EB "count_A1 AND 3");
MakeComm(0XF80A "bra if count_C4 bit 1=0");
MakeComm(0XF83F "byte_A2?");
MakeComm(0XF853 "(byte_84 - 0h");
MakeComm(0XF854 "bra if byte_84 = 0");
MakeComm(0XFA0D "48 = ?");
MakeComm(0XFA2C "40=?");
MakeComm(0XFA9E "IC1E =0, OLVL1 =0");
MakeComm(0XFAA6 "bra if IGN34 pin = 1");
MakeComm(0XFACF "dCAS_AvH /2");
MakeComm(0XFAD7 "dCAS_Av /2?");
MakeComm(0XFADE "new dCAS?");
MakeComm(0XFB2A "bra if byte_50 bits[3:2} =0");
MakeComm(0XFB33 "quit if byte_50 bits[1:0} =0");
MakeComm(0XFB43 "quit if status_A0 bit4 =1");
MakeComm(0XFB4E "test	PORT1 for changes??");
MakeComm(0XFB50 "turn off some pins?");
MakeComm(0XFB57 "turn off some pins?");
MakeComm(0XFC41 "bra if IGN12 pin = 1");
MakeComm(0XFC54 "bra if IGN34 pin = 1");
MakeComm(0XFE88 "is this not the return address???");
MakeComm(0XFEEA "D = 89:90");
MakeComm(0XFEF3 "byte_88 - 100h");
MakeComm(0XFEF5 "bra if byte_88<100h");
MakeComm(0XFEF7 "else load default !100h");
MakeComm(0XFEFD "local loop");
MakeComm(0XFF09 "loop_FF09");
MakeComm(0XFF0B "exit when no upper bits = 1");
MakeComm(0XFF0D "D = D/2");
MakeComm(0XFF0E "decrement X");
MakeComm(0XFF16 "A*2");
MakeComm(0XFF17 "(A*2) to B");
MakeComm(0XFF18 "what is B?");
MakeComm(0XFF80 "set carry");
}
